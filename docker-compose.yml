version: '3.3'
services:

  signal-database:
    image: 'postgres:11'
    container_name: signal-database
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    volumes:
      - './signal-database/scripts/:/docker-entrypoint-initdb.d/'
      - './signal-database:/var/lib/postgresql/data'
    networks:
      - default

  redis:
    image: 'redis:5'
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - './redis:/data'
    networks:
      - default

  turn-server:
    build:
      context: ./turn-server
      dockerfile: Dockerfile
    container_name: turn-server
    restart: always
    ports:
      - '3478:3478/udp'
      - '3478:3478/tcp'
      - '5349:5349/udp'
      - '5349:5349/tcp'
    volumes:
      - ./config/turnserver.conf:/etc/coturn/turnserver.conf
    networks:
      - default

  signal-server:
    build:
      context: ./signal-server
      dockerfile: Dockerfile
    container_name: signal-server
    restart: always
    volumes:
      - './config/signal.yml:/config/signal.yml'
      - './signal-server/ssl:/usr/src/signal-server/ssl'
    ports:
      - '8080:8080'
      - '8081:8081'
    networks:
      - default
    depends_on:
      - signal-database
      - turn-server
      - redis

  redis_commander:
    container_name: redis_commander
    image: 'rediscommander/redis-commander:latest'
    hostname: redis-commander
    ports:
      - '8001:8081'
    links:
      - redis
    environment:
      - 'REDIS_HOSTS=main:redis:6379'

  adminer:
    container_name: adminer
    image:  adminer:latest
    ports:  
      - 8000:8080
    links: 
      - signal-database
    environment: 
      ADMINER_DESIGN: nette
    networks:
      - default